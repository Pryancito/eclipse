# Graphics drivers initialization script
# This script handles GPU driver detection and loading
# All GPU drivers load via pcid-spawner with automatic PCI detection
# OPTIMIZED FOR GAMING MICE (high polling rate support)

# Start ACPI first (required for proper PCI detection)
acpid

# Start pcid (required for pcid-spawner to work)
pcid

echo "[init_graphics] Iniciando inputd..."

# STEP 1: Start inputd FIRST so graphics drivers can register with it
# inputd must be running BEFORE any display drivers load
# GAMING MOUSE FIX: inputd has 64KB pre-allocated buffers for high-speed mice
# NOTE: We don't use -A flag during boot as display may not be ready yet
inputd

echo "[init_graphics] Detectando hardware gráfico..."

# STEP 2: Load GPU drivers via PCI detection
# pcid-spawner will scan PCI bus for class 0x03 (Display controllers) and load:
# - nvidiad for NVIDIA GPUs (vendor 0x10DE, subclass 0x00 or 0x02)
#   - Subclass 0x00 = VGA compatible controller
#   - Subclass 0x02 = 3D controller (some RTX cards)
# - amdd for AMD GPUs (vendor 0x1002)
# - inteld for Intel GPUs (vendor 0x8086)
# - bgad for QEMU/VirtualBox (vendor 0x1234/0x80EE)
# - virtio-gpud for virtio (vendor 0x1AF4)
# Use -v (validate) mode to ensure drivers start correctly
echo "[init_graphics] Cargando drivers GPU específicos vía pcid-spawner..."
pcid-spawner /etc/pcid/initfs_graphics.toml

echo "[init_graphics] Cargando driver VESA como fallback..."

# Launch vesad as universal fallback
# If a hardware driver already claimed "display.bga", vesad will use "display.vesa"
# This ensures ALL hardware has graphics support, even if no specific driver loaded
vesad

echo "[init_graphics] Cargando controladores de entrada..."

# STEP 3: Start input drivers (they connect to inputd as producers)

# Load PS/2 first (for legacy keyboard/mouse support)
# GAMING MOUSE FIX: ps2d has 8KB buffer (32x larger) for high-speed PS/2 gaming mice
ps2d us

# Load USB host controllers via PCI detection
# This is required for USB keyboard/mouse support
# pcid-spawner will:
#   1. Scan PCI bus for USB controllers (class 0x0C, subclass 0x03)
#   2. Launch xhcid for each XHCI controller found (prog_if 0x30)
#   3. xhcid will automatically spawn usbhidd for HID devices (keyboard/mouse)
#   4. usbhidd will create /scheme/usb.X/input/* schemes
# Use -v (validate) mode to ensure USB drivers start correctly
echo "[init_graphics] Detectando controladores USB..."
pcid-spawner /etc/pcid/initfs_usb.toml
echo "[init_graphics] Esperando enumeracion USB..."

echo "[init_graphics] Sistema gráfico listo"

